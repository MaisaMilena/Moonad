Functor.const<F: Type -> Type>(f: Functor(F)): <A: Type, B: Type> -> A -> F(B) -> F(A)
  <A, B> (a)
  Functor.map<>(f)<,>(Function.const<,>(a))

type Functor<F: Type -> Type> {
  new(map: <A: Type, B: Type> -> (A -> B) -> F(A) -> F(B))
}

Functor.map<F: Type -> Type>(f: Functor(F)): <A: Type, B: Type> -> (A -> B) -> F(A) -> F(B)
  case f {
    new: f.map
  }
